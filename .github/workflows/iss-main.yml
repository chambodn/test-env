name: Process IssueComment events
on:
  issue_comment:

permissions:
  id-token: write
  contents: read
  pull-requests: write

# This allows a subsequently queued workflow run to interrupt previous runs
concurrency:
  group: "${{ github.workflow }} @ ${{ github.event.pull_request.head.label || github.head_ref || github.ref }}"
  cancel-in-progress: true

jobs:
  
  init:
    if: contains(github.event.comment.html_url, '/pull') # Check if the comments come from pull request, excluse comments from issue.
    runs-on: ubuntu-latest
    steps:
      - id: 'get-branch'
        run: echo ::set-output name=branch::$(gh pr view $PR_NO --repo $REPO --json headRefName --jq '.headRefName')
        env:
          REPO: ${{ github.repository }}
          PR_NO: ${{ github.event.issue.number }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - run: echo ${{ steps.get-branch.outputs.branch }}
    outputs:
      branch: ${{ steps.get-branch.outputs.branch }}
  
  deploy-in-sandbox:
    if: startsWith(need.init.outputs.branch, 'sandbox/')
    uses: ./.github/workflows/deploy.yml
    needs: init
    with:
      execution_environment: sandbox
    secrets: inherit

  deploy-in-dev:
    if: startsWith(need.init.outputs.branch, 'dev/')
    uses: ./.github/workflows/deploy.yml
    needs: init
    with:
      execution_environment: dev
    secrets: inherit

  deploy-in-pre:
    if: startsWith(need.init.outputs.branch, 'pre/')
    uses: ./.github/workflows/deploy.yml
    needs: init
    with:
      execution_environment: pre
    secrets: inherit
  
  deploy-in-prod:
    if: startsWith(need.init.outputs.branch, 'prod/')
    uses: ./.github/workflows/deploy.yml
    needs: init
    with:
      execution_environment: prod
    secrets: inherit
