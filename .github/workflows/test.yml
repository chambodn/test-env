name: Test
on: 
  pull_request:
    types:
      - opened
      - synchronize
      - reopened
      - closed
    branches:
    # restrict actions on pull requests to only 
    # run when created against the main branch
      - main
jobs:
  check:
    permissions:
      contents: read
      pull-requests: read
    runs-on: ubuntu-latest
    steps:
      - uses: mdecoleman/pr-branch-name@1.2.0
        id: vars
        with:
          repo-token: ${{ secrets.GITHUB_TOKEN }}
      - run: echo ${{ steps.vars.outputs.branch }}
      - uses: dorny/paths-filter@v2
        id: changes
        with:
          filters: |
            sandbox:
              - 'live/sandbox/**'
            dev:
              - 'live/dev/**'
            envcommon:
              - '_envcommon/**'
      - name: Run the action # You would run your tests before this using the output to set state/desc
        uses: Sibz/github-status-action@v1
        if: steps.changes.outputs.sandbox == 'true' && startsWith(steps.vars.outputs.branch, 'dev')
        with: 
          authToken: ${{secrets.GITHUB_TOKEN}}
          context: 'Test run'
          description: 'Passed'
          state: 'success'
          sha: ${{github.event.pull_request.head.sha || github.sha}}

  dev:
    name: deploy-in-dev
    environment: dev
    permissions:
      contents: read
      pull-requests: write
    runs-on: ubuntu-latest
    steps:
      - name: Test.
        run: |
          echo "Running on pr: ${{ github.ref }}"

      - name: Checkout
        uses: actions/checkout@v3

      - name: Check env
        run: echo "The current environment is ${{ secrets.ENV_NAME }}"

      # Checks to see if any files in the PR match one of the listed file types.
      # We can use this filter to decide whether or not to run linters or tests.
      # You can check if a file with a listed file type is in the PR by doing:
      # if: ${{ steps.filter.outputs.md == 'true' }}
      # This will return true if there's a markdown file that was changed
      # in the PR.
      - uses: dorny/paths-filter@v2
        id: filter
        with:
          filters: |
            sandbox:
              - 'live/sandbox/**'
            dev:
              - 'live/dev/**'
            envcommon:
              - '_envcommon/**'

      - uses: actions/github-script@v3
        with:
          github-token: ${{secrets.GITHUB_TOKEN}}
          script: |
            github.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: '‚ùåüö´ Thanks for reporting!'
            })